
@MINE_POKEMON_LIST
;所持しているポケモンをポケモンボックスのように
;1ページあたり30匹まで表示する関数、最大300までで
#DIM ポケモンリストナンバー
#DIM 文字空白数
#DIM ページナンバー
#DIM FIRST_LINE
#DIM 入力結果
#DIM P_ID
ポケモンリストナンバー = 0
文字空白数 = 0


$SHOW_LOOP
DRAWLINE
;PRINT これ空欄空列？なくなる
PRINTFORML 

ポケモンリストナンバー = 0

FOR LOCAL:0, 0, CHARANUM
        IF TALENT:(LOCAL:0):ポケモン
            ポケモンリストナンバー ++
            IF (ポケモンリストナンバー <= ((ページナンバー + 1)*30)) && (ポケモンリストナンバー > ((ページナンバー)*30))
                STRLENS CALLNAME:(LOCAL:0)
                文字空白数 = 20 - (RESULT:0)
                FOR (LOCAL:1), 0, 文字空白数
                    LOCALS:0 += " "
                NEXT    
                ;PRINTFORML {RESULT:0}
                IF ポケモンリストナンバー < 10
                    LOCALS:1 += "  "
                ELSEIF ポケモンリストナンバー < 100
                    LOCALS:1 += " "
                ENDIF
                PRINTBUTTON "["+TOSTR(ポケモンリストナンバー)+LOCALS:1+"]"+ CALLNAME:(LOCAL:0),ポケモンリストナンバー
                PRINTFORM %LOCALS:0%
                LOCALS:0 = 
                LOCALS:1 = 
            ENDIF
        ENDIF
NEXT

;IF FIRST_LINE != 1

;PRINTL 
PRINTFORML 
PRINTFORML 

    DRAWLINE
;    FIRST_LINE = 1
;ELSE
;ENDIF

IF ページナンバー > 0
	PRINTBUTTON "[7777] 前のページ", 7777
ELSE
    PRINTFORM %TOSTR_SPACE(17)%
ENDIF
PRINTFORM %TOSTR_SPACE(20)%
PRINTFORM 現在のページ{ページナンバー}
PRINTFORM %TOSTR_SPACE(20)%

IF ページナンバー < 9
	PRINTBUTTON "[8888] 次のページ", 8888
ELSE

ENDIF

PRINTFORML 
PRINTFORM %TOSTR_SPACE(37)%
PRINTBUTTON "[9999] もどる", 9999

$INPUT_LOOP
INPUT

入力結果 = RESULT

IF 入力結果 == 9999
    RETURN
ELSEIF 入力結果 == 8888
    ページナンバー += 1
    CLEARLINE LINECOUNT - FIRST_LINE
    GOTO SHOW_LOOP
ELSEIF 入力結果 == 7777
    ページナンバー -= 1
    CLEARLINE LINECOUNT - FIRST_LINE
    GOTO SHOW_LOOP
ELSEIF (入力結果 <= ((ページナンバー + 1)*30)) && (入力結果 > ((ページナンバー)*30))
    CALL POKEMON_ID(入力結果)
    P_ID = RESULT:0
    CALL POKEMON_STATUS_DETAIL(P_ID)
ELSE
    GOTO INPUT_LOOP
ENDIF

;GOTO SHOW_LOOP

@POKEMON_ID(対象ナンバー)
;すべてのキャラリストからポケモンだけを抽出し
;所持ポケモンの何番目にあたるポケモンか対象ナンバーに代入することで
;目的ポケモンのキャラIDを抽出する関数
#DIM ポケモンリストナンバー検証用
#DIM 対象ナンバー
#DIM P_ID

ポケモンリストナンバー検証用 = 0

FOR LOCAL:0, 0, CHARANUM
    IF TALENT:(LOCAL:0):ポケモン
        ポケモンリストナンバー検証用++
        IF ポケモンリストナンバー検証用 == 対象ナンバー
            P_ID = LOCAL:0
            BREAK
        ENDIF
    ENDIF
NEXT

;PRINTFORML {P_ID}

RETURN P_ID


@POKEMON_TYPENAME1(P_ID)
;目的ポケモンの持つ1つ目のタイプを文字列で返す関数
#FUNCTIONS
#DIM P_ID
    SIF TALENT:P_ID:タイプ1 == 1
        ARGS = ノーマル
    SIF TALENT:P_ID:タイプ1 == 2
        ARGS = ほのお
    SIF TALENT:P_ID:タイプ1 == 3
        ARGS = みず
    SIF TALENT:P_ID:タイプ1 == 4
        ARGS = でんき
    SIF TALENT:P_ID:タイプ1 == 5
        ARGS = くさ
    SIF TALENT:P_ID:タイプ1 == 6
        ARGS = こおり
    SIF TALENT:P_ID:タイプ1 == 7
        ARGS = かくとう
    SIF TALENT:P_ID:タイプ1 == 8
        ARGS = どく
    SIF TALENT:P_ID:タイプ1 == 9
       ARGS = じめん
    SIF TALENT:P_ID:タイプ1 == 10
        ARGS = ひこう
    SIF TALENT:P_ID:タイプ1 == 11
        ARGS = エスパー
    SIF TALENT:P_ID:タイプ1 == 12
        ARGS = むし
    SIF TALENT:P_ID:タイプ1 == 13
        ARGS = いわ
    SIF TALENT:P_ID:タイプ1 == 14
        ARGS = ゴースト
    SIF TALENT:P_ID:タイプ1 == 15
        ARGS = ドラゴン
    SIF TALENT:P_ID:タイプ1 == 16
        ARGS = あく
    SIF TALENT:P_ID:タイプ1 == 17
        ARGS = はがね
    SIF TALENT:P_ID:タイプ1 == 18
        ARGS = フェアリー

RETURNF ARGS

@POKEMON_TYPENAME2(P_ID)
;目的ポケモンの持つ2つ目のタイプを文字列で返す関数
#FUNCTIONS
#DIM P_ID
    SIF TALENT:P_ID:タイプ2 == 1
        ARGS = ノーマル
    SIF TALENT:P_ID:タイプ2 == 2
        ARGS = ほのお
    SIF TALENT:P_ID:タイプ2 == 3
        ARGS = みず
    SIF TALENT:P_ID:タイプ2 == 4
        ARGS = でんき
    SIF TALENT:P_ID:タイプ2 == 5
        ARGS =  くさ
    SIF TALENT:P_ID:タイプ2 == 6
        ARGS = こおり
    SIF TALENT:P_ID:タイプ2 == 7
        ARGS = かくとう
    SIF TALENT:P_ID:タイプ2 == 8
        ARGS = どく
    SIF TALENT:P_ID:タイプ2 == 9
       ARGS = じめん
    SIF TALENT:P_ID:タイプ2 == 10
        ARGS = ひこう
    SIF TALENT:P_ID:タイプ2 == 11
        ARGS = エスパー
    SIF TALENT:P_ID:タイプ2 == 12
        ARGS = むし
    SIF TALENT:P_ID:タイプ2 == 13
        ARGS = いわ
    SIF TALENT:P_ID:タイプ2 == 14
        ARGS = ゴースト
    SIF TALENT:P_ID:タイプ2 == 15
        ARGS = ドラゴン
    SIF TALENT:P_ID:タイプ2 == 16
        ARGS = あく
    SIF TALENT:P_ID:タイプ2 == 17
        ARGS = はがね
    SIF TALENT:P_ID:タイプ2 == 18
        ARGS = フェアリー

RETURNF ARGS

@GET_PERSONALITYNAME(P_ID)
;目的ポケモンの性格を文字列で返す関数
#FUNCTIONS
#DIM P_ID

SIF TALENT:P_ID:ポケモン性格 == 1
    ARGS = さみしがり
SIF TALENT:P_ID:ポケモン性格 == 2
    ARGS = いじっぱり
SIF TALENT:P_ID:ポケモン性格 == 3
    ARGS = やんちゃ
SIF TALENT:P_ID:ポケモン性格 == 4
    ARGS = ゆうかん
SIF TALENT:P_ID:ポケモン性格 == 5
    ARGS = 図太い
SIF TALENT:P_ID:ポケモン性格 == 6
    ARGS = わんぱく
SIF TALENT:P_ID:ポケモン性格 == 7
    ARGS = 能天気
SIF TALENT:P_ID:ポケモン性格 == 8
    ARGS = 呑気
SIF TALENT:P_ID:ポケモン性格 == 9
    ARGS = 控えめ
SIF TALENT:P_ID:ポケモン性格 == 10
    ARGS = おっとり
SIF TALENT:P_ID:ポケモン性格 == 11
    ARGS = うっかりや
SIF TALENT:P_ID:ポケモン性格 == 12
    ARGS = れいせい
SIF TALENT:P_ID:ポケモン性格 == 13
    ARGS = 穏やか
SIF TALENT:P_ID:ポケモン性格 == 14
    ARGS = おとなしい
SIF TALENT:P_ID:ポケモン性格 == 15
    ARGS = 慎重
SIF TALENT:P_ID:ポケモン性格 == 16
    ARGS = 生意気
SIF TALENT:P_ID:ポケモン性格 == 17
    ARGS = 臆病
SIF TALENT:P_ID:ポケモン性格 == 18
    ARGS = せっかち
SIF TALENT:P_ID:ポケモン性格 == 19
    ARGS = 陽気
SIF TALENT:P_ID:ポケモン性格 == 20
    ARGS = 無邪気
SIF TALENT:P_ID:ポケモン性格 == 21
    ARGS = 頑張り屋
SIF TALENT:P_ID:ポケモン性格 == 22
    ARGS = 素直
SIF TALENT:P_ID:ポケモン性格 == 23
    ARGS = 照れ屋
SIF TALENT:P_ID:ポケモン性格 == 24
    ARGS = 気まぐれ
SIF TALENT:P_ID:ポケモン性格 == 25
    ARGS = 照れ屋

RETURNF ARGS

@POKEMON_STATUS_DETAIL(P_ID)
;目的ポケモンの様々なステータスを表示する関数
#DIM P_ID

DRAWLINE
PRINTFORML

PRINTFORML 　名　　前　：%CALLNAME:P_ID%
PRINTFORML 　レベル　　：{BASE:P_ID:ポケモンLV}
PRINTFORML 　図鑑No.　　{TALENT:P_ID:全国図鑑No}
PRINTFORM 　性　　別　：
IF TALENT:P_ID:性別 == 0
	PRINTFORML ♂
ELSEIF TALENT:P_ID:性別 == 1
	PRINTFORML ♀
ELSE
ENDIF

PRINTFORML 　タイプ１　：%POKEMON_TYPENAME1(P_ID)%
PRINTFORML 　タイプ２　：%POKEMON_TYPENAME2(P_ID)%

PRINTFORML 　親　　　　：%CALLNAME:(TALENT:P_ID:ポケモン親)%

PRINTFORML 　ID　　　　 .{P_ID}

PRINTFORML 現在の経験値：{BASE:P_ID:合計獲得経験値}

PRINTFORML 　性　　格　：%GET_PERSONALITYNAME(P_ID)%

PRINTFORM 　特　　性　：
FOR LOCAL:0, 500, 600
    IF TALENT:P_ID:(LOCAL:0) == 1
        PRINTFORM %TALENTNAME:(LOCAL:0)%
    ENDIF
NEXT

PRINTFORML

PRINT
PRINTFORML
DRAWLINE
PRINT
PRINTFORML 
PRINTFORM %TOSTR_SPACE(37)%
PRINTBUTTON "[9999] もどる", 9999

$INPUT_LOOP
INPUT

IF RESULT == 9999
    RETURN
ELSE
    GOTO INPUT_LOOP
ENDIF

@POKEMON_GET_EXPERIENCE(P_ID,P_ID2)
#DIM P_ID  ;自分のポケモン
#DIM P_ID2 ;相手のポケモン
#DIM P_EXP
#DIM レベル補正
#DIM レベル補正結果

;レベル補正 = (((2 * BASE:P_ID2:ポケモンLV) + 10)/((BASE:P_ID2:ポケモンLV + BASE:P_ID:ポケモンLV)+10))

POWER レベル補正, (((2 * BASE:P_ID2:ポケモンLV) + 10)/((BASE:P_ID2:ポケモンLV + BASE:P_ID:ポケモンLV)+10)), (25/10)

IF TALENT:P_ID:遭遇 == 1
    P_EXP = (((BASE:P_ID2:基礎経験値) * レベル補正)/2 + 1)
ENDIF
    P_EXP = (((BASE:P_ID2:基礎経験値) * レベル補正) + 1)
    TALENT:P_ID:遭遇 = 1
ELSE

BASE:P_ID:合計獲得経験値 += P_EXP
PRINTFORML %CALLNAME:P_ID%は{P_EXP}の経験値を得た
CALL POKEMON_LVUP(P_ID)

@POKEMON_LVUP(P_ID)
#DIM P_ID
#DIM 必要経験値
#DIM LEVEL1
#DIM LEVEL2
#DIM LEVEL3

LEVEL1 = BASE:P_ID:ポケモンLV
POWER LEVEL2, (BASE:P_ID:ポケモンLV), 2
POWER LEVEL3, (BASE:P_ID:ポケモンLV), 3

SIF LEVEL1 == 1
    必要経験値 = 1

IF TALENT:P_ID:経験値タイプ == 1
    IF LEVEL1 >= 2 && LEVEL1 < 50
        必要経験値 =  (LEVEL3 * (100 - LEVEL1) / 50)
    ELSEIF LEVEL1 >= 50 && LEVEL1 < 68
        必要経験値 =  (LEVEL3 * (150 - LEVEL1) / 100)
    ELSEIF LEVEL1 >= 68 && LEVEL1 < 98
        必要経験値 =  (LEVEL3 * (637 - (10 * LEVEL1 /3)) / 500)    
    ELSEIF LEVEL1 >= 98 && LEVEL1 <= 100
        必要経験値 =  (LEVEL3 * (160-LEVEL1) / 100)
    ENDIF

ELSEIF TALENT:P_ID:経験値タイプ == 2
    必要経験値 =  (LEVEL3 * 8)/10
ELSEIF TALENT:P_ID:経験値タイプ == 3
    必要経験値 =  LEVEL3
ELSEIF TALENT:P_ID:経験値タイプ == 4
    必要経験値 =  ((LEVEL3 * 12 / 10) - (15 * LEVEL2) +(100 * LEVEL1) -140)
ELSEIF TALENT:P_ID:経験値タイプ == 5
    必要経験値 = LEVEL3 * 125 / 100    
ELSEIF TALENT:P_ID:経験値タイプ == 6
    IF LEVEL1 >= 2 && LEVEL1 < 15
        必要経験値 = (LEVEL3 * (24 +((LEVEL1 + 1) / 3)) / 50)
    ELSEIF LEVEL1 >= 15 && LEVEL1 < 36
        必要経験値 = (LEVEL3 * (14 + LEVEL1) / 50)
    ELSEIF LEVEL1 >= 36 && LEVEL1 < 100
        必要経験値 = (LEVEL3 * (32 +(LEVEL1 / 2)) / 50)
    ENDIF
ENDIF

SIF BASE:P_ID:合計獲得経験値 >= 必要経験値
    BASE:P_ID:ポケモンLV += 1
    PRINTFORML %CALLNAME:P_ID%はレベルアップして、LV.{BASE:P_ID:ポケモンLV}になった！！
    CALL POKEMON_LVUP(P_ID)

PRINTFORML 次のレベルまで、あと{必要経験値 - BASE:P_ID:合計獲得経験値}

RETURN 必要経験値

@SET_POKEMON_ENEMY_WILD(ポケモンCSV番号)
#DIM ポケモンCSV番号
#DIM　P_ID2

ADDCHARA ポケモンCSV番号
P_ID2 = CHARANUM

RETURN P_ID2

@POKEMON_DATA_P1001(P_ID2 ,登場フラグ)
#DIM P_ID2
#DIM 登場フラグ

IF 遭遇フラグ == 1
ELSE
    BASE:P_ID2:ポケモンLV = 5
    
ENDIF

@SET_POKEMON_ENEMY_TRAINER(トレーナーCSV番号)

