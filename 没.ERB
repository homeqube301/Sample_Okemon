;@POKEMON_BATTLE_Calculator(P_ID, P_ID2,バトルコマンド,バトルコマンドE,成功判定1,急所判定1,成功判定2,急所判定2)
;#DIM P_ID
;#DIM P_ID2
;#DIM バトルコマンド
;#DIM バトルコマンドE
;;0でなにもしない、もしくはわるあがき
;#DIM 成功判定1
;#DIM 成功判定2
;;1=命中 2=回避
;;1=急所
;#DIM 急所判定1
;#DIM 急所判定2
;#DIM 分類1
;#DIM 分類2
;#DIM 威力1
;#DIM 威力2
;#DIM 攻撃タイプ1
;#DIM 攻撃タイプ2
;#DIM ダメージ1
;#DIM ダメージ2
;#DIM 相性補正1
;#DIM 相性補正2
;
;ダメージ1 = 0
;ダメージ2 = 0
;
;TRYCCALLFORM ATTACK_Class_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;分類1 = RESULT
;TRYCCALLFORM ATTACK_Class_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;分類2 = RESULT
;TRYCCALLFORM ATTACK_Power_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;威力1 = RESULT
;TRYCCALLFORM ATTACK_Power_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;威力2 = RESULT
;TRYCCALLFORM ATTACK_Type_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;攻撃タイプ1 = RESULT
;TRYCCALLFORM ATTACK_Type_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;攻撃タイプ2 = RESULT
;
;CALL TypeEFDamage(攻撃タイプ1,TALENT:P_ID2:タイプ1,TALENT:P_ID2:タイプ2)
;相性補正1 = RESULT
;
;CALL TypeEFDamage(攻撃タイプ2,TALENT:P_ID:タイプ1,TALENT:P_ID:タイプ2)
;相性補正2 = RESULT
;
;IF CFLAG:P_ID:P_攻撃補正 >= 0
;    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * (2+CFLAG:P_ID:P_攻撃補正) / 2)
;ELSE
;    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * 2 / (2 - CFLAG:P_ID:P_攻撃補正))
;ENDIF
;IF CFLAG:P_ID:P_防御補正 >= 0
;    BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * (2+CFLAG:P_ID:P_防御補正) / 2)
;ELSE
;    BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * 2 / (2 - CFLAG:P_ID:P_防御補正))
;ENDIF
;IF CFLAG:P_ID:P_特攻補正 >= 0
;    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * (2+CFLAG:P_ID:P_特攻補正) / 2)
;ELSE
;    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * 2 / (2 - CFLAG:P_ID:P_特攻補正))
;ENDIF
;IF CFLAG:P_ID:P_特防補正 >= 0
;    BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * (2+CFLAG:P_ID:P_特防補正) / 2)
;ELSE
;    BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * 2 / (2 - CFLAG:P_ID:P_特防補正))
;ENDIF
;IF CFLAG:P_ID:P_素早さ補正 >= 0
;    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * (2+CFLAG:P_ID:P_素早さ補正) / 2)
;ELSE
;    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * 2 / (2 - CFLAG:P_ID:P_素早さ補正))
;ENDIF
;
;IF CFLAG:P_ID2:P_攻撃補正 >= 0
;    BASE:P_ID2:P_攻撃 = (BASE:P_ID2:P_攻撃 * (2+CFLAG:P_ID2:P_攻撃補正) / 2)
;ELSE
;    BASE:P_ID2:P_攻撃 = (BASE:P_ID2:P_攻撃 * 2 / (2 - CFLAG:P_ID2:P_攻撃補正))
;ENDIF
;IF CFLAG:P_ID2:P_防御補正 >= 0
;    BASE:P_ID2:P_防御 = (BASE:P_ID2:P_防御 * (2+CFLAG:P_ID2:P_防御補正) / 2)
;ELSE
;    BASE:P_ID2:P_防御 = (BASE:P_ID2:P_防御 * 2 / (2 - CFLAG:P_ID2:P_防御補正))
;ENDIF
;IF CFLAG:P_ID2:P_特攻補正 >= 0
;    BASE:P_ID2:P_特攻 = (BASE:P_ID2:P_特攻 * (2+CFLAG:P_ID2:P_特攻補正) / 2)
;ELSE
;    BASE:P_ID2:P_特攻 = (BASE:P_ID2:P_特攻 * 2 / (2 - CFLAG:P_ID2:P_特攻補正))
;ENDIF
;IF CFLAG:P_ID2:P_特防補正 >= 0
;    BASE:P_ID2:P_特防 = (BASE:P_ID2:P_特防 * (2+CFLAG:P_ID2:P_特防補正) / 2)
;ELSE
;    BASE:P_ID2:P_特防 = (BASE:P_ID2:P_特防 * 2 / (2 - CFLAG:P_ID2:P_特防補正))
;ENDIF
;IF CFLAG:P_ID2:P_素早さ補正 >= 0
;    BASE:P_ID2:P_素早さ = (BASE:P_ID2:P_素早さ * (2+CFLAG:P_ID2:P_素早さ補正) / 2)
;ELSE
;    BASE:P_ID2:P_素早さ = (BASE:P_ID2:P_素早さ * 2 / (2 - CFLAG:P_ID2:P_素早さ補正))
;ENDIF
;
;
;;ダメージ判定
;IF 成功判定1 != 2 && 分類1 == 1 && 相性補正1 != -4
;    ダメージ1 = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力1) * (BASE:P_ID:P_攻撃)/(BASE:P_ID2:P_防御)) / 50 + 2)
;ELSEIF 成功判定1 != 2 && 分類1 == 2 && 相性補正1 != -4
;    ダメージ1 = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力1) * (BASE:P_ID:P_特攻)/(BASE:P_ID2:P_特防)) / 50 + 2)
;ENDIF
;    IF 急所判定1 == 1
;        ダメージ1 = (ダメージ1*15)/10
;    ENDIF
;    IF (TALENT:P_ID:タイプ1 == 攻撃タイプ1) || (TALENT:P_ID:タイプ2 == 攻撃タイプ1)
;        ダメージ1 = (ダメージ1*15)/10
;    ENDIF
;    IF 相性補正1 == 1
;        ダメージ1 *= 2
;    ELSEIF 相性補正1 == 2
;        ダメージ1 *= 4 
;    ELSEIF 相性補正1 == -1
;        ダメージ1 /= 2
;    ELSEIF 相性補正1 == -2
;        ダメージ1 /= 4
;    ELSEIF 相性補正1 == -4    
;        ダメージ1 = 0
;    ENDIF
;    ダメージ1 *= RAND(85,101)
;    ダメージ1 /= 100
;
;
;IF 成功判定2 != 2 && 分類2 == 1 && 相性補正2 != -4
;    ダメージ2 = (((((BASE:P_ID2:ポケモンLV)*2 / 5 + 2) * 威力2) * (BASE:P_ID2:P_攻撃)/(BASE:P_ID:P_防御)) * 50 + 2)
;ELSEIF 成功判定2 != 2 && 分類2 == 2 && 相性補正2 != -4
;    ダメージ2 = (((((BASE:P_ID2:ポケモンLV)*2 / 5 + 2) * 威力2) * (BASE:P_ID2:P_特攻)/(BASE:P_ID:P_特防)) * 50 + 2)
;ENDIF
;    IF 急所判定2 == 1
;        ダメージ2 = (ダメージ2*15)/10
;    ENDIF
;    IF (TALENT:P_ID2:タイプ2 == 攻撃タイプ2) || (TALENT:P_ID2:タイプ2 == 攻撃タイプ2)
;        ダメージ2 = (ダメージ2*15)/10
;    ENDIF
;    IF 相性補正2 == 1
;        ダメージ2 *= 2
;    ELSEIF 相性補正2 == 2
;        ダメージ2 *= 4 
;    ELSEIF 相性補正2 == -1
;        ダメージ2 /= 2
;    ELSEIF 相性補正2 == -2
;        ダメージ2 /= 4
;    ELSEIF 相性補正2 == -4    
;        ダメージ2 = 0
;    ENDIF
;    ダメージ2 *= RAND(85,101)
;    ダメージ2 /= 100
;
;RETURN ダメージ1, ダメージ2,相性補正1,相性補正2




