
@BATTLE_POKEMON_WILD_FRONT_SINGLE(ポケモンCSV番号)
#DIM P_ID
#DIM P_ID2
#DIM 戦闘結果
#DIM ポケモンCSV番号
#DIM FIRST_LINE

FIRST_LINE = LINECOUNT

CALL SET_POKEMON_ENEMY_WILD(ポケモンCSV番号)
P_ID2 = RESULT

PRINTFORML
PRINTFORML 野生の%CALLNAME:P_ID2%が現れた！！
PRINTFORMW

FOR LOCAL, 0,CHARANUM
    IF TALENT:LOCAL:手持ち順番 == 1
        P_ID == LOCAL
    ENDIF
NEXT

IF P_ID == 0
    PRINTFORML たたかえるポケモンがいない！！
    PRINTFORML %CALLNAME:MASTER%は逃げ出した・・・
    DELCHARA P_ID2
    RETURN
ENDIF

PRINTFORML
PRINTFORML いけ！%CALLNAME:P_ID%！！
PRINTFORMW

CLEARLINE LINECOUNT - FIRST_LINE        
CALL BATTLE_POKEMON_WILD_MAINCOMMAND_SINGLE(P_ID,P_ID2)
戦闘結果 = RESULT
IF 戦闘結果 == 9999
   ;強制終了
   DELCHARA P_ID2
   RETURN
ENDIF 

@BATTLE_POKEMON_WILD_MAINCOMMAND_SINGLE(P_ID, P_ID2)
#DIM P_ID
#DIM P_ID2
#DIM 逃走成功率
#DIM 逃走回数
#DIM 入力結果
#DIM FIRST_LINE
#DIM ターン数
#DIM 前衛
#DIM バトルコマンド
#DIM バトルコマンドE
#DIM 成功判定1
#DIM 成功判定2
#DIM 急所判定1
#DIM 急所判定2
#DIM ダメージ1
#DIM ダメージ2
#DIM 相性補正1
#DIM 相性補正2
#DIM 同速判定

前衛 = P_ID
ターン数 = 0
逃走回数 = 0
FIRST_LINE = LINECOUNT
$SHOW_LOOP
ターン数 ++
P_ID = 前衛
同速判定 == 0
バトルコマンド = 0
バトルコマンドE = 0
PRINTFORML
DRAWLINE
PRINTFORML
;-----------------------------------------
PRINTFORML
PRINTFORM %CALLNAME:P_ID2% 
PRINTFORM LV.{BASE:P_ID2:ポケモンLV} 

IF TALENT:P_ID2:ポケモン性別 != 3
    PRINTFORM %GET_POKEMON_SEX(P_ID2)%
ENDIF

IF CFLAG:P_ID2:状態異常 != 0
    PRINTFORML %GET_POKEMON_CONDITIONS(P_ID2)%
ELSE
ENDIF

PRINTFORML
PRINTFORML
PRINTFORML 　　HP：{BASE:P_ID2:P_HP}/{MAXBASE:P_ID2:P_HP} 
PRINTFORML

;-----------------------------------------
PRINTFORML
PRINTFORM %CALLNAME:P_ID% 
PRINTFORM LV.{BASE:P_ID:ポケモンLV} 

IF TALENT:P_ID:ポケモン性別 != 3
    PRINTFORM %GET_POKEMON_SEX(P_ID)%
ENDIF

IF CFLAG:P_ID:状態異常 != 0
    PRINTFORM %GET_POKEMON_CONDITIONS(P_ID)%
ELSE
ENDIF

PRINTFORML
PRINTFORML
PRINTFORML 　　HP：{BASE:P_ID:P_HP}/{MAXBASE:P_ID:P_HP} 
PRINTFORML
;-------------------------------------
PRINTFORML
DRAWLINE
PRINTFORML

PRINTBUTTON "[7777] たたかう", 7777
PRINTBUTTON "[8888] ポケモン", 8888
PRINTBUTTON "[9999] 逃げる", 9999

$INPUT_LOOP
INPUT

入力結果 = RESULT

IF 入力結果 == 9999
    CLEARLINE LINECOUNT - FIRST_LINE
    逃走回数 ++
    PRINTFORML ・・・
    逃走成功率 = ((MAXBASE:P_ID:P_素早さ * 128 / MAXBASE:P_ID2:P_素早さ) + (30 * 逃走回数))*100 / 256
    IF RAND(100) <= 逃走成功率
		CLEARLINE LINECOUNT - FIRST_LINE        
         PRINTFORML 逃げ切れた！！
         逃走回数 = 0
         RETURN 9999
    ELSE
		CLEARLINE LINECOUNT - FIRST_LINE        
        PRINTFORML ダメだ、追いつかれた！！
        CALL POKEMON_ENEMY_COMMAND(前衛,P_ID2)
        バトルコマンドE = RESULT:0
        CALL POKEMON_BATTLE_TURN(前衛,P_ID2,バトルコマンド,バトルコマンドE)
        GOTO SHOW_LOOP
    ENDIF
    PRINTFORML 
ELSEIF 入力結果 == 8888
    CLEARLINE LINECOUNT - FIRST_LINE
    CALL POKEMON_CHANGE_INBATTLE(前衛)
    IF RESULT == 9999
        GOTO SHOW_LOOP
    ELSE
        前衛 = RESULT:1
        CALL POKEMON_ENEMY_COMMAND(前衛,P_ID2)
        バトルコマンドE = RESULT:0
        GOTO SHOW_LOOP
    ENDIF
ELSEIF 入力結果 == 7777
    CLEARLINE LINECOUNT - FIRST_LINE
    CALL POKEMON_BATTLE_COMMAND(前衛,P_ID2)
    SIF RESULT:0 == 9999
        GOTO SHOW_LOOP
    バトルコマンド = RESULT:0
    PRINTFORMW {バトルコマンド}
    CALL POKEMON_ENEMY_COMMAND(前衛,P_ID2)
    バトルコマンドE = RESULT:0
    CALL POKEMON_BATTLE_Judgement(前衛,P_ID2,バトルコマンド)
    成功判定1 = RESULT:0
    急所判定1 = RESULT:1
    PRINTFORML この技は成功率{成功判定1}で、急所判定は{急所判定1}です
    CALL POKEMON_BATTLE_Judgement(P_ID2,前衛,バトルコマンドE)
    成功判定2 = RESULT:0
    急所判定2 = RESULT:1
    PRINTFORML この技は成功率{成功判定2}で、急所判定は{急所判定2}です
    CALL POKEMON_BATTLE_Calculator(前衛, P_ID2,バトルコマンド,成功判定1,急所判定1,急所判定2)
    ダメージ1 = RESULT:0
    相性補正1 = RESULT:1
    CALL POKEMON_BATTLE_Calculator(P_ID2, 前衛,バトルコマンドE,成功判定2,急所判定2,急所判定1)    
    ダメージ2 = RESULT:0
    相性補正2 = RESULT:1
    IF BASE:P_ID:P_素早さ == BASE:P_ID2:P_素早さ
        IF RAND(2) == 1
            同速判定 = 1
        ELSE    
            同速判定 = 2
        ENDIF
    ENDIF
    IF BASE:P_ID:P_素早さ > BASE:P_ID2:P_素早さ || 同速判定 == 1
        CALL POKEMON_BATTLE_OUTPUT(前衛, P_ID2,バトルコマンド,バトルコマンドE,成功判定1,急所判定1,成功判定2,急所判定2,ダメージ1,ダメージ2,相性補正1,相性補正2)
        CALL POKEMON_BATTLE_OUTPUT(P_ID2, 前衛,バトルコマンドE,バトルコマンド,成功判定2,急所判定2,成功判定1,急所判定1,ダメージ2,ダメージ1,相性補正2,相性補正1)   
    ELSEIF BASE:P_ID:P_素早さ < BASE:P_ID2:P_素早さ|| 同速判定 == 2
        CALL POKEMON_BATTLE_OUTPUT(P_ID2, 前衛,バトルコマンドE,バトルコマンド,成功判定2,急所判定2,成功判定1,急所判定1,ダメージ2,ダメージ1,相性補正2,相性補正1)   
        CALL POKEMON_BATTLE_OUTPUT(前衛, P_ID2,バトルコマンド,バトルコマンドE,成功判定1,急所判定1,成功判定2,急所判定2,ダメージ1,ダメージ2,相性補正1,相性補正2)
    ENDIF
    GOTO SHOW_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF

@POKEMON_BATTLE_OUTPUT(P_ID, P_ID2,バトルコマンド,バトルコマンドE,成功判定1,急所判定1,成功判定2,急所判定2,ダメージ1,ダメージ2,相性補正1,相性補正2)
#DIM P_ID
#DIM P_ID2
#DIM バトルコマンド
#DIM バトルコマンドE
;0でなにもしない、もしくはわるあがき
#DIM FIRST_LINE
#DIM 成功判定1
#DIM 成功判定2
;1=命中 2=回避
#DIM 急所判定1
#DIM 急所判定2
#DIM ダメージ1
#DIM ダメージ2
#DIM 相性補正1
#DIM 相性補正2
;1=急所
FIRST_LINE = LINECOUNT
IF 成功判定1 == 1
    PRINTFORML
    PRINTFORMW %CALLNAME:P_ID%の%GET_POKEMON_ATTACKNAME(バトルコマンド)%!
    PRINTFORML
    TRYCCALLFORM ATTACK_Individual_P{バトルコマンド}(P_ID,P_ID2)
    CATCH
    ENDCATCH
    IF RESULT:0 != 0
        ダメージ1 = RESULT:0
    ENDIF
    IF ダメージ1 != 0
        IF 相性補正1 >= 1
            PRINTFORML
            PRINTFORMW 効果はバツグンだ！！
            PRINTFORML
        ENDIF
        IF 急所判定1 == 1
            PRINTFORML
            PRINTFORMW 急所にあたった！！
            PRINTFORML
        ENDIF
        BASE:P_ID2:P_HP -= ダメージ1
    ENDIF
ELSE
    PRINTFORML
    PRINTFORMW 相手の%CALLNAME:P_ID2%には当たらなかった!
    PRINTFORML
    PRINTFORML
    PRINTFORML
ENDIF
CLEARLINE LINECOUNT - FIRST_LINE
RETURN

@POKEMON_BATTLE_Calculator(P_ID, P_ID2,バトルコマンド,成功判定,急所判定,急所判定2)
#DIM P_ID
#DIM P_ID2
#DIM バトルコマンド
;0でなにもしない、もしくはわるあがき
#DIM 成功判定
;1=命中 2=回避
;1=急所
#DIM 急所判定
#DIM 急所判定2
#DIM 分類
#DIM 威力
#DIM 攻撃タイプ
#DIM ダメージ
#DIM 相性補正

ダメージ = 0
RESULT = 0

TRYCCALLFORM ATTACK_Class_P{バトルコマンド}(P_ID,P_ID2)
CATCH
ENDCATCH
分類 = RESULT
TRYCCALLFORM ATTACK_Power_P{バトルコマンド}(P_ID,P_ID2)
CATCH
ENDCATCH
威力 = RESULT
TRYCCALLFORM ATTACK_Type_P{バトルコマンド}(P_ID,P_ID2)
CATCH

ENDCATCH
攻撃タイプ = RESULT
PRINTFORML {バトルコマンド}の技のタイプは{攻撃タイプ}だよん

CALL TypeEFDamage(攻撃タイプ,TALENT:P_ID2:タイプ1,TALENT:P_ID2:タイプ2)
相性補正 = RESULT


IF CFLAG:P_ID:P_攻撃補正 >= 0
    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * (2+CFLAG:P_ID:P_攻撃補正) / 2)
ELSE
    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * 2 / (2 - CFLAG:P_ID:P_攻撃補正))
ENDIF
IF 急所判定2 != 1
    IF CFLAG:P_ID:P_防御補正 >= 0
        BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * (2+CFLAG:P_ID:P_防御補正) / 2)
    ELSE
        BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * 2 / (2 - CFLAG:P_ID:P_防御補正))
    ENDIF
ENDIF
IF CFLAG:P_ID:P_特攻補正 >= 0
    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * (2+CFLAG:P_ID:P_特攻補正) / 2)
ELSE
    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * 2 / (2 - CFLAG:P_ID:P_特攻補正))
ENDIF
IF 急所判定2 != 1
    IF CFLAG:P_ID:P_特防補正 >= 0
        BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * (2+CFLAG:P_ID:P_特防補正) / 2)
    ELSE
        BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * 2 / (2 - CFLAG:P_ID:P_特防補正))
    ENDIF
ENDIF
IF CFLAG:P_ID:P_素早さ補正 >= 0
    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * (2+CFLAG:P_ID:P_素早さ補正) / 2)
ELSE
    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * 2 / (2 - CFLAG:P_ID:P_素早さ補正))
ENDIF

;ダメージ判定
IF 成功判定 != 2 && 分類 == 1 && 相性補正 != -4
    ダメージ = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力) * (BASE:P_ID:P_攻撃)/(BASE:P_ID2:P_防御)) / 50 + 2)
ELSEIF 成功判定 != 2 && 分類 == 2 && 相性補正 != -4
    ダメージ = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力) * (BASE:P_ID:P_特攻)/(BASE:P_ID2:P_特防)) / 50 + 2)
ENDIF
    IF 急所判定 == 1
        ダメージ = (ダメージ*15)/10
    ENDIF
    IF (TALENT:P_ID:タイプ1 == 攻撃タイプ) || (TALENT:P_ID:タイプ2 == 攻撃タイプ)
        ダメージ = (ダメージ*15)/10
    ENDIF
    IF 相性補正 == 1
        ダメージ *= 2
    ELSEIF 相性補正 == 2
        ダメージ *= 4 
    ELSEIF 相性補正 == -1
        ダメージ /= 2
    ELSEIF 相性補正 == -2
        ダメージ /= 4
    ELSEIF 相性補正 == -4    
        ダメージ = 0
    ENDIF
    ダメージ *= RAND(85,101)
    ダメージ /= 100

RETURN ダメージ,相性補正

;@POKEMON_BATTLE_Calculator(P_ID, P_ID2,バトルコマンド,バトルコマンドE,成功判定1,急所判定1,成功判定2,急所判定2)
;#DIM P_ID
;#DIM P_ID2
;#DIM バトルコマンド
;#DIM バトルコマンドE
;;0でなにもしない、もしくはわるあがき
;#DIM 成功判定1
;#DIM 成功判定2
;;1=命中 2=回避
;;1=急所
;#DIM 急所判定1
;#DIM 急所判定2
;#DIM 分類1
;#DIM 分類2
;#DIM 威力1
;#DIM 威力2
;#DIM 攻撃タイプ1
;#DIM 攻撃タイプ2
;#DIM ダメージ1
;#DIM ダメージ2
;#DIM 相性補正1
;#DIM 相性補正2
;
;ダメージ1 = 0
;ダメージ2 = 0
;
;TRYCCALLFORM ATTACK_Class_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;分類1 = RESULT
;TRYCCALLFORM ATTACK_Class_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;分類2 = RESULT
;TRYCCALLFORM ATTACK_Power_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;威力1 = RESULT
;TRYCCALLFORM ATTACK_Power_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;威力2 = RESULT
;TRYCCALLFORM ATTACK_Type_P{バトルコマンド}(P_ID,P_ID2)
;CATCH
;ENDCATCH
;攻撃タイプ1 = RESULT
;TRYCCALLFORM ATTACK_Type_P{バトルコマンドE}(P_ID2,P_ID)
;CATCH
;ENDCATCH
;攻撃タイプ2 = RESULT
;
;CALL TypeEFDamage(攻撃タイプ1,TALENT:P_ID2:タイプ1,TALENT:P_ID2:タイプ2)
;相性補正1 = RESULT
;
;CALL TypeEFDamage(攻撃タイプ2,TALENT:P_ID:タイプ1,TALENT:P_ID:タイプ2)
;相性補正2 = RESULT
;
;IF CFLAG:P_ID:P_攻撃補正 >= 0
;    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * (2+CFLAG:P_ID:P_攻撃補正) / 2)
;ELSE
;    BASE:P_ID:P_攻撃 = (BASE:P_ID:P_攻撃 * 2 / (2 - CFLAG:P_ID:P_攻撃補正))
;ENDIF
;IF CFLAG:P_ID:P_防御補正 >= 0
;    BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * (2+CFLAG:P_ID:P_防御補正) / 2)
;ELSE
;    BASE:P_ID:P_防御 = (BASE:P_ID:P_防御 * 2 / (2 - CFLAG:P_ID:P_防御補正))
;ENDIF
;IF CFLAG:P_ID:P_特攻補正 >= 0
;    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * (2+CFLAG:P_ID:P_特攻補正) / 2)
;ELSE
;    BASE:P_ID:P_特攻 = (BASE:P_ID:P_特攻 * 2 / (2 - CFLAG:P_ID:P_特攻補正))
;ENDIF
;IF CFLAG:P_ID:P_特防補正 >= 0
;    BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * (2+CFLAG:P_ID:P_特防補正) / 2)
;ELSE
;    BASE:P_ID:P_特防 = (BASE:P_ID:P_特防 * 2 / (2 - CFLAG:P_ID:P_特防補正))
;ENDIF
;IF CFLAG:P_ID:P_素早さ補正 >= 0
;    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * (2+CFLAG:P_ID:P_素早さ補正) / 2)
;ELSE
;    BASE:P_ID:P_素早さ = (BASE:P_ID:P_素早さ * 2 / (2 - CFLAG:P_ID:P_素早さ補正))
;ENDIF
;
;IF CFLAG:P_ID2:P_攻撃補正 >= 0
;    BASE:P_ID2:P_攻撃 = (BASE:P_ID2:P_攻撃 * (2+CFLAG:P_ID2:P_攻撃補正) / 2)
;ELSE
;    BASE:P_ID2:P_攻撃 = (BASE:P_ID2:P_攻撃 * 2 / (2 - CFLAG:P_ID2:P_攻撃補正))
;ENDIF
;IF CFLAG:P_ID2:P_防御補正 >= 0
;    BASE:P_ID2:P_防御 = (BASE:P_ID2:P_防御 * (2+CFLAG:P_ID2:P_防御補正) / 2)
;ELSE
;    BASE:P_ID2:P_防御 = (BASE:P_ID2:P_防御 * 2 / (2 - CFLAG:P_ID2:P_防御補正))
;ENDIF
;IF CFLAG:P_ID2:P_特攻補正 >= 0
;    BASE:P_ID2:P_特攻 = (BASE:P_ID2:P_特攻 * (2+CFLAG:P_ID2:P_特攻補正) / 2)
;ELSE
;    BASE:P_ID2:P_特攻 = (BASE:P_ID2:P_特攻 * 2 / (2 - CFLAG:P_ID2:P_特攻補正))
;ENDIF
;IF CFLAG:P_ID2:P_特防補正 >= 0
;    BASE:P_ID2:P_特防 = (BASE:P_ID2:P_特防 * (2+CFLAG:P_ID2:P_特防補正) / 2)
;ELSE
;    BASE:P_ID2:P_特防 = (BASE:P_ID2:P_特防 * 2 / (2 - CFLAG:P_ID2:P_特防補正))
;ENDIF
;IF CFLAG:P_ID2:P_素早さ補正 >= 0
;    BASE:P_ID2:P_素早さ = (BASE:P_ID2:P_素早さ * (2+CFLAG:P_ID2:P_素早さ補正) / 2)
;ELSE
;    BASE:P_ID2:P_素早さ = (BASE:P_ID2:P_素早さ * 2 / (2 - CFLAG:P_ID2:P_素早さ補正))
;ENDIF
;
;
;;ダメージ判定
;IF 成功判定1 != 2 && 分類1 == 1 && 相性補正1 != -4
;    ダメージ1 = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力1) * (BASE:P_ID:P_攻撃)/(BASE:P_ID2:P_防御)) / 50 + 2)
;ELSEIF 成功判定1 != 2 && 分類1 == 2 && 相性補正1 != -4
;    ダメージ1 = (((((BASE:P_ID:ポケモンLV)*2 / 5 + 2) * 威力1) * (BASE:P_ID:P_特攻)/(BASE:P_ID2:P_特防)) / 50 + 2)
;ENDIF
;    IF 急所判定1 == 1
;        ダメージ1 = (ダメージ1*15)/10
;    ENDIF
;    IF (TALENT:P_ID:タイプ1 == 攻撃タイプ1) || (TALENT:P_ID:タイプ2 == 攻撃タイプ1)
;        ダメージ1 = (ダメージ1*15)/10
;    ENDIF
;    IF 相性補正1 == 1
;        ダメージ1 *= 2
;    ELSEIF 相性補正1 == 2
;        ダメージ1 *= 4 
;    ELSEIF 相性補正1 == -1
;        ダメージ1 /= 2
;    ELSEIF 相性補正1 == -2
;        ダメージ1 /= 4
;    ELSEIF 相性補正1 == -4    
;        ダメージ1 = 0
;    ENDIF
;    ダメージ1 *= RAND(85,101)
;    ダメージ1 /= 100
;
;
;IF 成功判定2 != 2 && 分類2 == 1 && 相性補正2 != -4
;    ダメージ2 = (((((BASE:P_ID2:ポケモンLV)*2 / 5 + 2) * 威力2) * (BASE:P_ID2:P_攻撃)/(BASE:P_ID:P_防御)) * 50 + 2)
;ELSEIF 成功判定2 != 2 && 分類2 == 2 && 相性補正2 != -4
;    ダメージ2 = (((((BASE:P_ID2:ポケモンLV)*2 / 5 + 2) * 威力2) * (BASE:P_ID2:P_特攻)/(BASE:P_ID:P_特防)) * 50 + 2)
;ENDIF
;    IF 急所判定2 == 1
;        ダメージ2 = (ダメージ2*15)/10
;    ENDIF
;    IF (TALENT:P_ID2:タイプ2 == 攻撃タイプ2) || (TALENT:P_ID2:タイプ2 == 攻撃タイプ2)
;        ダメージ2 = (ダメージ2*15)/10
;    ENDIF
;    IF 相性補正2 == 1
;        ダメージ2 *= 2
;    ELSEIF 相性補正2 == 2
;        ダメージ2 *= 4 
;    ELSEIF 相性補正2 == -1
;        ダメージ2 /= 2
;    ELSEIF 相性補正2 == -2
;        ダメージ2 /= 4
;    ELSEIF 相性補正2 == -4    
;        ダメージ2 = 0
;    ENDIF
;    ダメージ2 *= RAND(85,101)
;    ダメージ2 /= 100
;
;RETURN ダメージ1, ダメージ2,相性補正1,相性補正2


@POKEMON_BATTLE_Judgement(P_ID, P_ID2,バトルコマンド)
#DIM P_ID
#DIM P_ID2
#DIM バトルコマンド
#DIM 成功判定
;1=命中 2=回避
#DIM 急所判定
;1=急所

成功判定 == 0
急所判定 == 0
;成功判定
TRYCCALLFORM ATTACK_HITRATE_P{バトルコマンド}(P_ID,P_ID2)
CATCH
ENDCATCH
IF (CFLAG:P_ID:P_命中率補正) >= (CFLAG:P_ID2:P_回避率補正)
    IF RAND(100) < ((RESULT:0 * (3 + (CFLAG:P_ID:P_命中率補正) - (CFLAG:P_ID2:P_回避率補正))) / 3) || RESULT:0 == -1
        成功判定 = 1
    ELSE
        成功判定 = 2
    ENDIF
ELSEIF (CFLAG:P_ID:P_命中率補正) < (CFLAG:P_ID2:P_回避率補正)
    IF RAND(100) < ((RESULT:0 * 3) / (3 + (CFLAG:P_ID2:P_回避率補正) - (CFLAG:P_ID:P_命中率補正))) || RESULT:0 == -1
        成功判定 = 1
    ELSE
        成功判定 = 2
    ENDIF
ENDIF

;急所判定
IF 成功判定 == 1
    ;攻撃技かどうか
    TRYCCALLFORM ATTACK_Class_P{バトルコマンド}(P_ID,P_ID2)
    CATCH
    ENDCATCH
    IF RESULT:0 == 3
    ELSEIF CFLAG:P_ID:P_急所率補正 >= 3
        急所判定 = 1
    ELSEIF  CFLAG:P_ID:P_急所率補正 == 2
        IF RAND(10000) <= 5000
            急所判定 = 1
        ENDIF
    ELSEIF  CFLAG:P_ID:P_急所率補正 == 1
        IF RAND(10000) <= 1250
            急所判定 = 1
        ENDIF
    ELSE
        IF RAND(10000) <= 417
            急所判定 = 1
        ENDIF
    ENDIF
ENDIF
RETURN 成功判定,急所判定

@POKEMON_ENEMY_COMMAND(前衛,P_ID2)
#DIM P_ID
#DIM P_ID2
#DIM 前衛
#DIM バトルコマンドE
#DIM 補助技選択

;IF RAND(100) >= 70


@POKEMON_BATTLE_COMMAND(P_ID,P_ID2)
#DIM P_ID
#DIM P_ID2
#DIM 前衛
#DIM バトルコマンド
#DIM FIRST_LINE
#DIM 技のタイプ
$SHOW_LOOP
FIRST_LINE = LINECOUNT
;CLEARLINE LINECOUNT - FIRST_LINE

LOCAL:11 = ABL:P_ID:技1
LOCAL:12 = ABL:P_ID:技2
LOCAL:13 = ABL:P_ID:技3
LOCAL:14 = ABL:P_ID:技4
LOCAL:15 = BASE:P_ID:技1PP
LOCAL:16 = BASE:P_ID:技2PP
LOCAL:17 = BASE:P_ID:技3PP
LOCAL:18 = BASE:P_ID:技4PP

FOR LOCAL, 1, 5
    IF  LOCAL:(LOCAL+10) == 0
       PRINTFORML 「{LOCAL}」　 - 
    ELSE
        IF (LOCAL:(LOCAL+14)) > 0
            TRYCCALLFORM ATTACK_Type_P{(LOCAL:(LOCAL+10))}(P_ID,P_ID2)
            技のタイプ = RESULT
            CATCH
            ENDCATCH
    	    PRINTFORM  [{LOCAL}]　  - %GET_POKEMON_ATTACKNAME(LOCAL:(LOCAL+10))%　%GET_POKEMON_TYPENAME(技のタイプ)%　{LOCAL:(LOCAL+14)}　　　
    	    PRINTFORM 
            PRINTBUTTON 　　"[技詳細]", (LOCAL+10)
            PRINTFORML
        ELSE
            TRYCCALLFORM ATTACK_Type_P{(LOCAL:(LOCAL+10))}(P_ID,P_ID2)
            技のタイプ = RESULT
            CATCH
            ENDCATCH
     	    PRINTFORM 「{LOCAL}」　 - %GET_POKEMON_ATTACKNAME(LOCAL:(LOCAL+10))%　%GET_POKEMON_TYPENAME(技のタイプ)%　{LOCAL:(LOCAL+14)}　　　
    	    PRINTFORM 
            PRINTBUTTON 　　"[技詳細]", (LOCAL+10)
            PRINTFORML           
        ENDIF
    ENDIF
NEXT

PRINTFORML
PRINTFORML
PRINTFORML [9999] -もどる
DO
    INPUT
    SELECTCASE RESULT
    CASE 1,2,3,4
        IF RESULT == 1
            BASE:P_ID:技1PP -= 1
        ELSEIF RESULT == 2
            BASE:P_ID:技2PP -= 1
        ELSEIF RESULT == 3
            BASE:P_ID:技3PP -= 1
        ELSEIF RESULT == 4
            BASE:P_ID:技4PP -= 1
        ENDIF
        CLEARLINE LINECOUNT - FIRST_LINE
        バトルコマンド = (LOCAL:(RESULT+10))
        RETURN バトルコマンド
    CASE 11,12,13,14
        CLEARLINE LINECOUNT - FIRST_LINE
        TRYCCALLFORM ATTACK_EXPLAIN_P{(LOCAL:(RESULT))}(P_ID,P_ID2)
        CATCH
        ENDCATCH
        GOTO SHOW_LOOP
    CASE 9999
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 9999
    ENDSELECT
LOOP 1

;--------------------------------------------
@TypeEFDamage(ARG:0, ARG:1, ARG:2)
;<-80,効果なし -2,ぜんぜんきかない -1,いまひとつ 0,等倍 1,こうかばつぐん 2,とってもばつぐん
;ARG:0,攻撃技のタイプ ARG:1,防御側のタイプ1 ARG:2,防御側のタイプ2
;--------------------------------------------
#DIM 基本相性1
#DIM 基本相性2
#DIM 最終相性
#DIM 効果相性

基本相性1 = 0
基本相性2 = 0
最終相性 = 0
効果相性 = 0

PRINTFORML タイプ1は{ARG:0}、タイプ2は{ARG:1}、タイプ3は{ARG:2}

CALL TypeIdentify(ARG:0, ARG:1)
    基本相性1 == RESULT

CALL TypeIdentify(ARG:0, ARG:2)
    基本相性2 == RESULT

;PRINTFORML 基本相性1は{基本相性1}、基本相性2は{基本相性2}

最終相性 = 基本相性1 + 基本相性2

IF 最終相性 >= 2
    効果相性 == 2
ELSEIF 最終相性 == 1
    効果相性 == 1
ELSEIF 最終相性 == -1
    効果相性 == -1
ELSEIF 最終相性 == -2
    効果相性 == -2
ELSEIF 最終相性 <= -80
    効果相性 == -4
ELSE
    効果相性 == 0
ENDIF

PRINTFORML この際の相性は{効果相性}だよ

RETURN 効果相性


;--------------------------------------------
@TypeIdentify(ARG:0, ARG:1)
;-99,効果なし  -1,いまひとつ 0,等倍 1,こうかばつぐん
;ARG:0,攻撃技のタイプ ARG:1,防御側のタイプ
;1=ノーマル   2=ほのお   3=みず   4=でんき     5=くさ      6=こおり   7=かくとう  8=どく   9=じめん   10=ひこう 
;11=エスパー 12=むし    13=いわ  14=ゴースト  15=ドラゴン  16=あく   17=はがね    18=フェアリー 
;--------------------------------------------
#DIM 基本相性

IF (( ARG:0 == 1 ) && (ARG:1 == 13 )) || (( ARG:0 == 1 ) && (ARG:1 == 17 )) || (( ARG:0 == 2 ) && (ARG:1 == 2 )) || (( ARG:0 == 2 ) && (ARG:1 == 3 )) || (( ARG:0 == 2 ) && (ARG:1 == 13 )) || (( ARG:0 == 2 ) && (ARG:1 == 15 )) || (( ARG:0 == 3 ) && (ARG:1 == 3 )) || (( ARG:0 == 3 ) && (ARG:1 == 5 )) || (( ARG:0 == 3 ) && (ARG:1 == 15 )) || (( ARG:0 == 4 ) && (ARG:1 == 4 )) || (( ARG:0 == 4 ) && (ARG:1 == 5 )) || (( ARG:0 == 4 ) && (ARG:1 == 15 )) || (( ARG:0 == 5 ) && (ARG:1 == 2 )) || (( ARG:0 == 5 ) && (ARG:1 == 5 )) || (( ARG:0 == 5 ) && (ARG:1 == 8 )) || (( ARG:0 == 5 ) && (ARG:1 == 10 )) || (( ARG:0 == 5 ) && (ARG:1 == 12 )) || (( ARG:0 == 5 ) && (ARG:1 == 15 )) || (( ARG:0 == 5 ) && (ARG:1 == 17 )) || (( ARG:0 == 6 ) && (ARG:1 == 2 )) || (( ARG:0 == 6 ) && (ARG:1 == 3 )) || (( ARG:0 == 6 ) && (ARG:1 == 6 )) || (( ARG:0 == 6 ) && (ARG:1 == 17 )) || (( ARG:0 == 7 ) && (ARG:1 == 8 )) || (( ARG:0 == 7 ) && (ARG:1 == 10 )) || (( ARG:0 == 7 ) && (ARG:1 == 11 )) || (( ARG:0 == 7 ) && (ARG:1 == 12 )) || (( ARG:0 == 7 ) && (ARG:1 == 18 )) || (( ARG:0 == 8 ) && (ARG:1 == 8 )) || (( ARG:0 == 8 ) && (ARG:1 == 9 )) || (( ARG:0 == 8 ) && (ARG:1 == 13 )) || (( ARG:0 == 8 ) && (ARG:1 == 14 )) || (( ARG:0 == 9 ) && (ARG:1 == 5 )) || (( ARG:0 == 9 ) && (ARG:1 == 12 )) || (( ARG:0 == 10 ) && (ARG:1 == 4 )) || (( ARG:0 == 10 ) && (ARG:1 == 13 )) || (( ARG:0 == 10 ) && (ARG:1 == 17 )) || (( ARG:0 == 11 ) && (ARG:1 == 11 )) || (( ARG:0 == 11 ) && (ARG:1 == 17 )) || (( ARG:0 == 12 ) && (ARG:1 == 2 )) || (( ARG:0 == 12 ) && (ARG:1 == 7 )) || (( ARG:0 == 12 ) && (ARG:1 == 8 )) || (( ARG:0 == 12 ) && (ARG:1 == 10 )) || (( ARG:0 == 12 ) && (ARG:1 == 14 )) || (( ARG:0 == 12 ) && (ARG:1 == 17 )) || (( ARG:0 == 12 ) && (ARG:1 == 18 )) || (( ARG:0 == 13 ) && (ARG:1 == 7 )) || (( ARG:0 == 13 ) && (ARG:1 == 9 )) || (( ARG:0 == 13 ) && (ARG:1 == 17 )) || (( ARG:0 == 14 ) && (ARG:1 == 16 )) || (( ARG:0 == 15 ) && (ARG:1 == 17 )) || (( ARG:0 == 16 ) && (ARG:1 == 7 )) || (( ARG:0 == 16 ) && (ARG:1 == 16 )) || (( ARG:0 == 16 ) && (ARG:1 == 18 )) || (( ARG:0 == 17 ) && (ARG:1 == 2 )) || (( ARG:0 == 17 ) && (ARG:1 == 3 )) || (( ARG:0 == 17 ) && (ARG:1 == 4 )) || (( ARG:0 == 17 ) && (ARG:1 == 17 )) || (( ARG:0 == 18 ) && (ARG:1 == 2 )) || (( ARG:0 == 18 ) && (ARG:1 == 8 )) || (( ARG:0 == 18 ) && (ARG:1 == 17 ))
    基本相性 = -1
ELSEIF (( ARG:0 == 2 ) && (ARG:1 == 5 )) || (( ARG:0 == 2 ) && (ARG:1 == 6 )) || (( ARG:0 == 2 ) && (ARG:1 == 12 )) || (( ARG:0 == 2 ) && (ARG:1 == 17 )) || (( ARG:0 == 3 ) && (ARG:1 == 2 )) || (( ARG:0 == 3 ) && (ARG:1 == 9 )) || (( ARG:0 == 3 ) && (ARG:1 == 13 )) || (( ARG:0 == 4 ) && (ARG:1 == 3 )) || (( ARG:0 == 4 ) && (ARG:1 == 10 )) || (( ARG:0 == 5 ) && (ARG:1 == 3 )) || (( ARG:0 == 5 ) && (ARG:1 == 9 )) || (( ARG:0 == 5 ) && (ARG:1 == 13 )) || (( ARG:0 == 6 ) && (ARG:1 == 5 )) || (( ARG:0 == 6 ) && (ARG:1 == 9 )) || (( ARG:0 == 6 ) && (ARG:1 == 10 )) || (( ARG:0 == 6 ) && (ARG:1 == 15 )) || (( ARG:0 == 7 ) && (ARG:1 == 1 )) || (( ARG:0 == 7 ) && (ARG:1 == 6 )) || (( ARG:0 == 7 ) && (ARG:1 == 13 )) || (( ARG:0 == 7 ) && (ARG:1 == 16 )) || (( ARG:0 == 7 ) && (ARG:1 == 17 )) || (( ARG:0 == 8 ) && (ARG:1 == 5 )) || (( ARG:0 == 8 ) && (ARG:1 == 18 )) || (( ARG:0 == 9 ) && (ARG:1 == 2 )) || (( ARG:0 == 9 ) && (ARG:1 == 4 )) || (( ARG:0 == 9 ) && (ARG:1 == 8 )) || (( ARG:0 == 9 ) && (ARG:1 == 13 )) || (( ARG:0 == 9 ) && (ARG:1 == 17 )) || (( ARG:0 == 10 ) && (ARG:1 == 5 )) || (( ARG:0 == 10 ) && (ARG:1 == 7 )) || (( ARG:0 == 10 ) && (ARG:1 == 12 )) || (( ARG:0 == 11 ) && (ARG:1 == 7 )) || (( ARG:0 == 11 ) && (ARG:1 == 8 )) || (( ARG:0 == 12 ) && (ARG:1 == 5 )) || (( ARG:0 == 12 ) && (ARG:1 == 11 )) || (( ARG:0 == 12 ) && (ARG:1 == 16 )) || (( ARG:0 == 13 ) && (ARG:1 == 2 )) || (( ARG:0 == 13 ) && (ARG:1 == 6 )) || (( ARG:0 == 13 ) && (ARG:1 == 10 )) || (( ARG:0 == 13 ) && (ARG:1 == 12 )) || (( ARG:0 == 14 ) && (ARG:1 == 11 )) || (( ARG:0 == 14 ) && (ARG:1 == 14 )) || (( ARG:0 == 15 ) && (ARG:1 == 15 )) || (( ARG:0 == 16 ) && (ARG:1 == 11 )) || (( ARG:0 == 16 ) && (ARG:1 == 14 )) || (( ARG:0 == 17 ) && (ARG:1 == 6 )) || (( ARG:0 == 17 ) && (ARG:1 == 13 )) || (( ARG:0 == 17 ) && (ARG:1 == 18 )) || (( ARG:0 == 18 ) && (ARG:1 == 7 )) || (( ARG:0 == 18 ) && (ARG:1 == 15 )) || (( ARG:0 == 18 ) && (ARG:1 == 16 ))
    基本相性 = 1
ELSEIF (( ARG:0 == 1 ) && (ARG:1 == 14 )) || (( ARG:0 == 4 ) && (ARG:1 == 9 )) || (( ARG:0 == 7 ) && (ARG:1 == 14 )) || (( ARG:0 == 8 ) && (ARG:1 == 17 )) || (( ARG:0 == 9 ) && (ARG:1 == 10 )) || (( ARG:0 == 11 ) && (ARG:1 == 16 )) || (( ARG:0 == 14 ) && (ARG:1 == 1 )) || (( ARG:0 == 15 ) && (ARG:1 == 18 ))  
    基本相性 = -99
ELSE
    基本相性 = 0
ENDIF

RETURN 基本相性


@POKEMON_CHANGE_INBATTLE(ARG)
#DIM 手持ちデータ1
#DIM 手持ちデータ2
#DIM 手持ちデータ3
#DIM 手持ちデータ4
#DIM 手持ちデータ5
#DIM 手持ちデータ6
#DIM 前衛
#DIM FIRST_LINE

前衛 = ARG:0

CALL POKEMON_HAND_NUMBER
手持ちデータ1 = RESULT:0
手持ちデータ2 = RESULT:1
手持ちデータ3 = RESULT:2
手持ちデータ4 = RESULT:3
手持ちデータ5 = RESULT:4
手持ちデータ6 = RESULT:5

ARG:10 = 手持ちデータ1
ARG:11 = 手持ちデータ2
ARG:12 = 手持ちデータ3
ARG:13 = 手持ちデータ4
ARG:14 = 手持ちデータ5
ARG:15 = 手持ちデータ6

$MEMEBER_CHANGE_LOOP
FIRST_LINE = LINECOUNT
PRINTFORMW どのポケモンと入れ替える？

FOR LOCAL, 1, 7
    IF (ARG:(LOCAL+9)) == 0 || (ARG:(LOCAL+9)) == 前衛
        PRINTFORML 「{LOCAL}」 -         
    ELSE
        IF CFLAG:(ARG:(LOCAL+9)):状態異常 != 8
    	    PRINTFORM  [{LOCAL}]  - %CALLNAME:(ARG:(LOCAL+9))% %GET_POKEMON_SEX((ARG:(LOCAL+9)))% LV.{BASE:(ARG:(LOCAL+9)):ポケモンLV} HP:{BASE:(ARG:(LOCAL+9)):P_HP}/{MAXBASE:(ARG:(LOCAL+9)):P_HP} ID.{(ARG:(LOCAL+9))} %GET_POKEMON_CONDITIONS((ARG:(LOCAL+9)))%
    	    PRINTFORM %GET_POKEMON_CONDITIONS((ARG:(LOCAL+9)))% 
            PRINTBUTTON "[つよさをみる]", (LOCAL+9)
            PRINTFORML
        ELSE
            PRINTFORM 「{LOCAL}」 - %CALLNAME:(ARG:(LOCAL+9))% %GET_POKEMON_SEX((ARG:(LOCAL+9)))% LV.{BASE:(ARG:(LOCAL+9)):ポケモンLV} ID.{(ARG:(LOCAL+9))} ひんし
            PRINTBUTTON "[つよさをみる]", (LOCAL+9)
            PRINTFORML
        ENDIF
    ENDIF
NEXT
LOCAL = 0
PRINTFORML
PRINTFORML
PRINTFORML [9999] -もどる
DO
    INPUT
    SELECTCASE RESULT
    CASE 1
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ1%！
        前衛 = 手持ちデータ1
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 2
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ2%！
        前衛 = 手持ちデータ2
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 3
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ3%！
        前衛 = 手持ちデータ3
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 4
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ4%！
        前衛 = 手持ちデータ4
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 5
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ5%！
        前衛 = 手持ちデータ5
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 6
        PRINTFORMW 戻れ！！%CALLNAME:前衛%！
        PRINTFORML
        PRINTFORML
        PRINTFORML 行け！！%CALLNAME:手持ちデータ6%！
        前衛 = 手持ちデータ6
        CLEARLINE LINECOUNT - FIRST_LINE
        RETURN 1,前衛
    CASE 10
        CALL POKEMON_STATUS_DETAIL(手持ちデータ1, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP
    CASE 11
        CALL POKEMON_STATUS_DETAIL(手持ちデータ2, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP
    CASE 12
        CALL POKEMON_STATUS_DETAIL(手持ちデータ3, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP
    CASE 13
        CALL POKEMON_STATUS_DETAIL(手持ちデータ4, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP
    CASE 14
        CALL POKEMON_STATUS_DETAIL(手持ちデータ5, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP
    CASE 15
        CALL POKEMON_STATUS_DETAIL(手持ちデータ6, 0, 1)
        CLEARLINE LINECOUNT - FIRST_LINE
        GOTO MEMEBER_CHANGE_LOOP

    CASE 9999
        CLEARLINE LINECOUNT - FIRST_LINE        
        RETURN 9999
    ENDSELECT
LOOP 1

@POKEMON_HAND_NUMBER
#DIM 手持ちデータ1
#DIM 手持ちデータ2
#DIM 手持ちデータ3
#DIM 手持ちデータ4
#DIM 手持ちデータ5
#DIM 手持ちデータ6

手持ちデータ1 = 0
手持ちデータ2 = 0
手持ちデータ3 = 0
手持ちデータ4 = 0
手持ちデータ5 = 0
手持ちデータ6 = 0

FOR LOCAL, 0, CHARANUM
    IF TALENT:LOCAL:手持ち順番 == 1
        手持ちデータ1 = LOCAL
    ELSEIF TALENT:LOCAL:手持ち順番 == 2
        手持ちデータ2 = LOCAL
    ELSEIF TALENT:LOCAL:手持ち順番 == 3
        手持ちデータ3 = LOCAL
    ELSEIF TALENT:LOCAL:手持ち順番 == 4
        手持ちデータ4 = LOCAL
    ELSEIF TALENT:LOCAL:手持ち順番 == 5
        手持ちデータ5 = LOCAL
    ELSEIF TALENT:LOCAL:手持ち順番 == 6
        手持ちデータ6 = LOCAL
    ENDIF
NEXT
LOCAL = 0

RETURN 手持ちデータ1, 手持ちデータ2, 手持ちデータ3, 手持ちデータ4, 手持ちデータ5, 手持ちデータ6

@SET_POKEMON_ENEMY_WILD(ポケモンCSV番号)
#DIM ポケモンCSV番号
#DIM P_ID2
#DIM 性別偏差

ADDCHARA ポケモンCSV番号
P_ID2 = CHARANUM - 1

IF TALENT:P_ID2:ポケモン特殊性別

ELSE
        性別偏差 = RAND(1001)
        IF 性別偏差 <= TALENT:P_ID2:性別割合
            TALENT:P_ID2:ポケモン性別 = 1
        ELSE
            TALENT:P_ID2:ポケモン性別 = 2
        ENDIF
	;TALENT:P_ID2:ポケモン性別 == RAND(1, 3)    
ENDIF

BASE:P_ID2:個体値H == RAND(0, 32)
BASE:P_ID2:個体値A == RAND(0, 32)
BASE:P_ID2:個体値B == RAND(0, 32)
BASE:P_ID2:個体値C == RAND(0, 32)
BASE:P_ID2:個体値D == RAND(0, 32)
BASE:P_ID2:個体値S == RAND(0, 32)

TALENT:P_ID2:ポケモン性格 == RAND(1, 26)

PRINTFORML %NAME:P_ID2%に{BASE:P_ID2:個体値H}を追加して、性格は{TALENT:P_ID2:ポケモン性格}にしたよ
TRYCCALLFORM POKEMON_DATA_P{ポケモンCSV番号}(P_ID2)
CALL STATUS_POKEMON_Calculator(P_ID2)
CATCH
ENDCATCH

RETURN P_ID2

@POKEMON_DATA_P1001(P_ID2 ,登場フラグ)
#DIM P_ID2
#DIM 登場フラグ

IF 登場フラグ == 1
ELSE
    BASE:P_ID2:ポケモンLV = 5
    ABL:P_ID2:技3 == 22
    PRINTFORML %NAME:P_ID2%のレベルを{BASE:P_ID2:ポケモンLV}にしたぞ。
ENDIF


;@SET_POKEMON_ENEMY_TRAINER(トレーナーCSV番号)

































